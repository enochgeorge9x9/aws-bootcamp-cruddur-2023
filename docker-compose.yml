version: '3.8'
name: cruddur
services:
    backend-flask:
        env_file:
            - ./backend-flask/.env
        build:
            context: ./backend-flask
            dockerfile: Dockerfile.dev
        ports:
            - '5000:4567'
        volumes:
            - ./backend-flask:/backend-flask
    frontend-vite:
        restart: unless-stopped
        env_file:
            - ./frontend-vite/.env
        build:
            context: ./frontend-vite
            dockerfile: Dockerfile.dev
        ports:
            - '4000:3000'
        volumes:
            - ./frontend-vite:/app
            - '/app/node_modules'
    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin4
        restart: always
        ports:
            - '8888:80'
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@gmail.com
            PGADMIN_DEFAULT_PASSWORD: password
        volumes:
            - pgadmin-data:/var/lib/pgadmin
        depends_on:
            - db
    db:
        image: postgres:13-alpine
        restart: always
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=password
        ports:
            - '5432:5432'
        volumes:
            #map db volume to contianers postgres volume
            - 'db:/var/lib/postgresql/data'
    # https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html
    dynamodb-local:
        # We needed to add user:root to get this working
        user: root
        command: '-jar DynamoDBLocal.jar -sharedDb -dbPath ./data'
        image: 'amazon/dynamodb-local:latest'
        container_name: dynamodb-local
        ports:
            - '8000:8000'
        volumes:
            - './docker/dynamodb:/home/dynamodblocal/data'
        working_dir: /home/dynamodblocal
    # xray-daemon:
    #     image: 'amazon/aws-xray-daemon'
    #     environment:
    #         AWS_ACCESS_KEY_ID: '${AWS_ACCESS_KEY_ID}'
    #         AWS_SECRET_ACCESS_KEY: '${AWS_SECRET_ACCESS_KEY}'
    #         AWS_REGION: '${AWS_DEFAULT_REGION}'
    #     command:
    #         - 'xray -o -b xray-daemon:2000'
    #     ports:
    #         - 2000:2000/udp
# the name flag is a hack to change the default prepend folder
# name when outputting the image names
networks:
    internal-network:
        driver: bridge
        name: cruddur
volumes:
    # Save the data in the local driver
    db:
        driver: local
    pgadmin-data:
